name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 1
      - name: Setup Node environment
        uses: actions/setup-node@v2
        with:
          node-version: 16
          architecture: x64
          registry-url: https://registry.npmjs.org/
          cache: 'yarn'
      - name: Installation
        run: |
          yarn
      - name: Code linting
        run: |
          yarn lint

  test:
    name: Testing on Node ${{ matrix.node-version }} ${{ matrix.os }} ${{ matrix.architecture }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [14, 16]
        architecture: [x64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 1
      - name: Setup Node environment
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          architecture: ${{ matrix.architecture }}
          registry-url: https://registry.npmjs.org/
          cache: 'yarn'
      - name: Installation
        run: |
          yarn
      - name: Unit testing
        run: |
          yarn test
      - name: Coveralls action
        uses: coverallsapp/github-action@1.1.3
        if: ${{ matrix.node-version == 16 && matrix.os == 'ubuntu-latest' && matrix.architecture == 'x64' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        if: ${{ matrix.node-version == 16 && matrix.os == 'ubuntu-latest' && matrix.architecture == 'x64' }}
        with:
          name: coverage-report
          path: coverage/lcov-report

  deploy:
    name: Deployment
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Download production artifacts
        uses: actions/download-artifact@v2
        with:
          name: coverage-report
          path: build
      - name: List production artifacts
        run: |
          ls -R
        working-directory: .
      - name: Deploy to Github Pages
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          force_orphan: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: ${{ github.event.head_commit.message }}
